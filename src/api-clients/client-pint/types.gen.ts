// This file is auto-generated by @hey-api/openapi-ts

export type ErrorResponse = {
    /**
     * Error message
     */
    error: string;
};

export type FileStats = {
    /**
     * File or directory name
     */
    name: string;
    /**
     * Full path
     */
    path: string;
    /**
     * Whether this is a directory
     */
    isDir: boolean;
    /**
     * File size in bytes
     */
    size: number;
    /**
     * Last modification time
     */
    modTime: string;
    /**
     * File permissions
     */
    permissions?: string;
};

export type FileOperationResponse = {
    message: string;
    path: string;
    operation: 'write' | 'moveFrom' | 'copyFrom';
    /**
     * Number of bytes written (for write operation)
     */
    bytesWritten?: number;
};

export type FileDeleteResponse = {
    message: string;
    path: string;
};

export type DirectoryCreateResponse = {
    message: string;
    path: string;
};

export type DirectoryListResponse = {
    path: string;
    entries: Array<FileStats>;
};

export type DirectoryDeleteResponse = {
    message: string;
    path: string;
};

export type TerminalListResponse = {
    terminals: Array<Terminal>;
};

export type TerminalCreateResponse = {
    terminal: Terminal;
};

export type TerminalResponse = {
    terminal: Terminal;
};

export type TerminalDeleteResponse = {
    message: string;
};

export type Terminal = {
    /**
     * Terminal ID
     */
    id: string;
    /**
     * Command being executed
     */
    command: string;
    /**
     * Command arguments
     */
    args?: Array<string>;
    /**
     * Terminal status
     */
    status: 'created' | 'running' | 'finished' | 'error';
    /**
     * Process ID
     */
    pid: number;
    /**
     * Working directory
     */
    workingDir?: string;
    /**
     * Creation timestamp
     */
    createdAt?: string;
};

export type TaskListResponse = {
    tasks: Array<Task>;
};

export type TaskResponse = {
    task: Task;
};

export type TaskActionResponse = {
    message: string;
    task: Task;
};

export type Task = {
    /**
     * Task ID
     */
    id: string;
    /**
     * Task name
     */
    name: string;
    /**
     * Command to execute
     */
    command: string;
    /**
     * Task status
     */
    status: 'idle' | 'running' | 'finished' | 'error' | 'killed';
    /**
     * Associated terminal ID
     */
    terminalId?: string;
    /**
     * Start time
     */
    startTime?: string;
    /**
     * End time
     */
    endTime?: string;
    /**
     * Exit code (if finished)
     */
    exitCode?: number;
};

export type SandboxState = {
    /**
     * Pint version
     */
    version: string;
    /**
     * Whether initial setup is completed
     */
    setupCompleted: boolean;
    /**
     * Workspace path
     */
    workspace?: string;
    /**
     * Server uptime in seconds
     */
    uptime?: number;
};

export type PortListResponse = {
    ports: Array<Port>;
};

export type Port = {
    /**
     * Port number
     */
    port: number;
    /**
     * Port status
     */
    status: 'open' | 'closed' | 'listening';
    /**
     * Process name using the port
     */
    process?: string;
    /**
     * Process ID
     */
    pid?: number;
    /**
     * Bind address
     */
    address?: string;
};

export type GetHealthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type GetHealthResponses = {
    /**
     * Server is healthy
     */
    200: {
        status?: string;
    };
};

export type GetHealthResponse = GetHealthResponses[keyof GetHealthResponses];

export type GetApiFsEventsData = {
    body?: never;
    headers: {
        /**
         * Glob pattern for files to watch
         */
        glob: string;
    };
    path?: never;
    query?: never;
    url: '/api/fs/events';
};

export type GetApiFsEventsResponses = {
    /**
     * Server-sent events containing filesystem changes
     */
    200: string;
};

export type GetApiFsEventsResponse = GetApiFsEventsResponses[keyof GetApiFsEventsResponses];

export type GetApiFsStatsByPathData = {
    body?: never;
    path: {
        /**
         * File or directory path
         */
        path: string;
    };
    query?: never;
    url: '/api/fs/stats/{path}';
};

export type GetApiFsStatsByPathErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type GetApiFsStatsByPathError = GetApiFsStatsByPathErrors[keyof GetApiFsStatsByPathErrors];

export type GetApiFsStatsByPathResponses = {
    /**
     * File stats retrieved successfully
     */
    200: FileStats;
};

export type GetApiFsStatsByPathResponse = GetApiFsStatsByPathResponses[keyof GetApiFsStatsByPathResponses];

export type DeleteApiFsFilesByPathData = {
    body?: never;
    path: {
        /**
         * File path
         */
        path: string;
    };
    query?: never;
    url: '/api/fs/files/{path}';
};

export type DeleteApiFsFilesByPathErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type DeleteApiFsFilesByPathError = DeleteApiFsFilesByPathErrors[keyof DeleteApiFsFilesByPathErrors];

export type DeleteApiFsFilesByPathResponses = {
    /**
     * File deleted successfully
     */
    200: FileDeleteResponse;
};

export type DeleteApiFsFilesByPathResponse = DeleteApiFsFilesByPathResponses[keyof DeleteApiFsFilesByPathResponses];

export type GetApiFsFilesByPathData = {
    body?: never;
    path: {
        /**
         * File path
         */
        path: string;
    };
    query?: never;
    url: '/api/fs/files/{path}';
};

export type GetApiFsFilesByPathErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type GetApiFsFilesByPathError = GetApiFsFilesByPathErrors[keyof GetApiFsFilesByPathErrors];

export type GetApiFsFilesByPathResponses = {
    /**
     * File contents
     */
    200: string;
};

export type GetApiFsFilesByPathResponse = GetApiFsFilesByPathResponses[keyof GetApiFsFilesByPathResponses];

export type PutApiFsFilesByPathData = {
    body: {
        /**
         * File operation to perform
         */
        operation: 'write' | 'moveFrom' | 'copyFrom';
        /**
         * File content (for write operation)
         */
        content?: string;
        /**
         * Source path (for moveFrom/copyFrom operations)
         */
        source?: string;
    };
    path: {
        /**
         * File path
         */
        path: string;
    };
    query?: never;
    url: '/api/fs/files/{path}';
};

export type PutApiFsFilesByPathErrors = {
    /**
     * Bad request - invalid parameters or request body
     */
    400: ErrorResponse;
};

export type PutApiFsFilesByPathError = PutApiFsFilesByPathErrors[keyof PutApiFsFilesByPathErrors];

export type PutApiFsFilesByPathResponses = {
    /**
     * File operation completed successfully
     */
    200: FileOperationResponse;
};

export type PutApiFsFilesByPathResponse = PutApiFsFilesByPathResponses[keyof PutApiFsFilesByPathResponses];

export type DeleteApiDirectoriesByPathData = {
    body?: never;
    path: {
        /**
         * Directory path
         */
        path: string;
    };
    query?: never;
    url: '/api/directories/{path}';
};

export type DeleteApiDirectoriesByPathErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type DeleteApiDirectoriesByPathError = DeleteApiDirectoriesByPathErrors[keyof DeleteApiDirectoriesByPathErrors];

export type DeleteApiDirectoriesByPathResponses = {
    /**
     * Directory deleted successfully
     */
    200: DirectoryDeleteResponse;
};

export type DeleteApiDirectoriesByPathResponse = DeleteApiDirectoriesByPathResponses[keyof DeleteApiDirectoriesByPathResponses];

export type GetApiDirectoriesByPathData = {
    body?: never;
    path: {
        /**
         * Directory path
         */
        path: string;
    };
    query?: never;
    url: '/api/directories/{path}';
};

export type GetApiDirectoriesByPathErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type GetApiDirectoriesByPathError = GetApiDirectoriesByPathErrors[keyof GetApiDirectoriesByPathErrors];

export type GetApiDirectoriesByPathResponses = {
    /**
     * Directory contents
     */
    200: DirectoryListResponse;
};

export type GetApiDirectoriesByPathResponse = GetApiDirectoriesByPathResponses[keyof GetApiDirectoriesByPathResponses];

export type PostApiDirectoriesByPathData = {
    body?: never;
    path: {
        /**
         * Directory path
         */
        path: string;
    };
    query?: never;
    url: '/api/directories/{path}';
};

export type PostApiDirectoriesByPathErrors = {
    /**
     * Bad request - invalid parameters or request body
     */
    400: ErrorResponse;
};

export type PostApiDirectoriesByPathError = PostApiDirectoriesByPathErrors[keyof PostApiDirectoriesByPathErrors];

export type PostApiDirectoriesByPathResponses = {
    /**
     * Directory created successfully
     */
    201: DirectoryCreateResponse;
};

export type PostApiDirectoriesByPathResponse = PostApiDirectoriesByPathResponses[keyof PostApiDirectoriesByPathResponses];

export type GetApiTerminalsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/terminals';
};

export type GetApiTerminalsResponses = {
    /**
     * Terminal list
     */
    200: TerminalListResponse;
};

export type GetApiTerminalsResponse = GetApiTerminalsResponses[keyof GetApiTerminalsResponses];

export type PostApiTerminalsData = {
    body: {
        /**
         * Command to execute
         */
        command: string;
        /**
         * Command arguments
         */
        args?: Array<string>;
        /**
         * Working directory
         */
        workingDir?: string;
    };
    path?: never;
    query?: never;
    url: '/api/terminals';
};

export type PostApiTerminalsErrors = {
    /**
     * Bad request - invalid parameters or request body
     */
    400: ErrorResponse;
};

export type PostApiTerminalsError = PostApiTerminalsErrors[keyof PostApiTerminalsErrors];

export type PostApiTerminalsResponses = {
    /**
     * Terminal created successfully
     */
    201: TerminalCreateResponse;
};

export type PostApiTerminalsResponse = PostApiTerminalsResponses[keyof PostApiTerminalsResponses];

export type DeleteApiTerminalsByIdData = {
    body?: never;
    path: {
        /**
         * Terminal ID
         */
        id: string;
    };
    query?: never;
    url: '/api/terminals/{id}';
};

export type DeleteApiTerminalsByIdErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type DeleteApiTerminalsByIdError = DeleteApiTerminalsByIdErrors[keyof DeleteApiTerminalsByIdErrors];

export type DeleteApiTerminalsByIdResponses = {
    /**
     * Terminal deleted successfully
     */
    200: TerminalDeleteResponse;
};

export type DeleteApiTerminalsByIdResponse = DeleteApiTerminalsByIdResponses[keyof DeleteApiTerminalsByIdResponses];

export type GetApiTerminalsByIdData = {
    body?: never;
    path: {
        /**
         * Terminal ID
         */
        id: string;
    };
    query?: never;
    url: '/api/terminals/{id}';
};

export type GetApiTerminalsByIdErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type GetApiTerminalsByIdError = GetApiTerminalsByIdErrors[keyof GetApiTerminalsByIdErrors];

export type GetApiTerminalsByIdResponses = {
    /**
     * Terminal state
     */
    200: TerminalResponse;
};

export type GetApiTerminalsByIdResponse = GetApiTerminalsByIdResponses[keyof GetApiTerminalsByIdResponses];

export type GetApiTerminalsByIdStdoutData = {
    body?: never;
    path: {
        /**
         * Terminal ID
         */
        id: string;
    };
    query?: never;
    url: '/api/terminals/{id}/stdout';
};

export type GetApiTerminalsByIdStdoutErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type GetApiTerminalsByIdStdoutError = GetApiTerminalsByIdStdoutErrors[keyof GetApiTerminalsByIdStdoutErrors];

export type GetApiTerminalsByIdStdoutResponses = {
    /**
     * Terminal stdout
     */
    200: string;
};

export type GetApiTerminalsByIdStdoutResponse = GetApiTerminalsByIdStdoutResponses[keyof GetApiTerminalsByIdStdoutResponses];

export type GetApiTerminalsByIdStderrData = {
    body?: never;
    path: {
        /**
         * Terminal ID
         */
        id: string;
    };
    query?: never;
    url: '/api/terminals/{id}/stderr';
};

export type GetApiTerminalsByIdStderrErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type GetApiTerminalsByIdStderrError = GetApiTerminalsByIdStderrErrors[keyof GetApiTerminalsByIdStderrErrors];

export type GetApiTerminalsByIdStderrResponses = {
    /**
     * Terminal stderr
     */
    200: string;
};

export type GetApiTerminalsByIdStderrResponse = GetApiTerminalsByIdStderrResponses[keyof GetApiTerminalsByIdStderrResponses];

export type PostApiTerminalsByIdStdinData = {
    body: {
        /**
         * Input to send to terminal
         */
        input: string;
    };
    path: {
        /**
         * Terminal ID
         */
        id: string;
    };
    query?: never;
    url: '/api/terminals/{id}/stdin';
};

export type PostApiTerminalsByIdStdinErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type PostApiTerminalsByIdStdinError = PostApiTerminalsByIdStdinErrors[keyof PostApiTerminalsByIdStdinErrors];

export type PostApiTerminalsByIdStdinResponses = {
    /**
     * Input sent successfully
     */
    200: {
        message?: string;
    };
};

export type PostApiTerminalsByIdStdinResponse = PostApiTerminalsByIdStdinResponses[keyof PostApiTerminalsByIdStdinResponses];

export type GetApiTasksData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/tasks';
};

export type GetApiTasksResponses = {
    /**
     * Task list
     */
    200: TaskListResponse;
};

export type GetApiTasksResponse = GetApiTasksResponses[keyof GetApiTasksResponses];

export type GetApiTasksByIdData = {
    body?: never;
    path: {
        /**
         * Task ID
         */
        id: string;
    };
    query?: never;
    url: '/api/tasks/{id}';
};

export type GetApiTasksByIdErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type GetApiTasksByIdError = GetApiTasksByIdErrors[keyof GetApiTasksByIdErrors];

export type GetApiTasksByIdResponses = {
    /**
     * Task state
     */
    200: TaskResponse;
};

export type GetApiTasksByIdResponse = GetApiTasksByIdResponses[keyof GetApiTasksByIdResponses];

export type PostApiTasksByIdRunData = {
    body?: never;
    path: {
        /**
         * Task ID
         */
        id: string;
    };
    query?: never;
    url: '/api/tasks/{id}/run';
};

export type PostApiTasksByIdRunErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
    /**
     * Task already running
     */
    409: ErrorResponse;
};

export type PostApiTasksByIdRunError = PostApiTasksByIdRunErrors[keyof PostApiTasksByIdRunErrors];

export type PostApiTasksByIdRunResponses = {
    /**
     * Task started successfully
     */
    200: TaskActionResponse;
};

export type PostApiTasksByIdRunResponse = PostApiTasksByIdRunResponses[keyof PostApiTasksByIdRunResponses];

export type PostApiTasksByIdStopData = {
    body?: never;
    path: {
        /**
         * Task ID
         */
        id: string;
    };
    query?: never;
    url: '/api/tasks/{id}/stop';
};

export type PostApiTasksByIdStopErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
    /**
     * Task not running
     */
    409: ErrorResponse;
};

export type PostApiTasksByIdStopError = PostApiTasksByIdStopErrors[keyof PostApiTasksByIdStopErrors];

export type PostApiTasksByIdStopResponses = {
    /**
     * Task stopped successfully
     */
    200: TaskActionResponse;
};

export type PostApiTasksByIdStopResponse = PostApiTasksByIdStopResponses[keyof PostApiTasksByIdStopResponses];

export type PostApiTasksByIdRestartData = {
    body?: never;
    path: {
        /**
         * Task ID
         */
        id: string;
    };
    query?: never;
    url: '/api/tasks/{id}/restart';
};

export type PostApiTasksByIdRestartErrors = {
    /**
     * Resource not found
     */
    404: ErrorResponse;
};

export type PostApiTasksByIdRestartError = PostApiTasksByIdRestartErrors[keyof PostApiTasksByIdRestartErrors];

export type PostApiTasksByIdRestartResponses = {
    /**
     * Task restarted successfully
     */
    200: TaskActionResponse;
};

export type PostApiTasksByIdRestartResponse = PostApiTasksByIdRestartResponses[keyof PostApiTasksByIdRestartResponses];

export type GetApiStateData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/state';
};

export type GetApiStateResponses = {
    /**
     * Sandbox state
     */
    200: SandboxState;
};

export type GetApiStateResponse = GetApiStateResponses[keyof GetApiStateResponses];

export type GetApiPortsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/ports';
};

export type GetApiPortsResponses = {
    /**
     * Port list
     */
    200: PortListResponse;
};

export type GetApiPortsResponse = GetApiPortsResponses[keyof GetApiPortsResponses];